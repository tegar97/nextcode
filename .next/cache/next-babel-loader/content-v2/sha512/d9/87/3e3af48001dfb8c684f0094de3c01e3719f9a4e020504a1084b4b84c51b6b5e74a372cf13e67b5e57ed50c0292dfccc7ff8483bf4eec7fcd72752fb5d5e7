{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Artikel from '../component/Artikel/Artikel';\nimport Hero from '../component/hero/Hero';\nimport { useEffect, useState } from 'react';\nimport { useTheme } from 'next-themes';\nimport { NextSeo } from 'next-seo';\nimport ScrollAnimation from 'react-animate-on-scroll';\nexport default function Home({\n  posts,\n  setting\n}) {\n  const {\n    theme,\n    setTheme\n  } = useTheme();\n  const {\n    0: mode,\n    1: setMode\n  } = useState('');\n  useEffect(function () {\n    setMode(localStorage.getItem('theme'));\n  }, [theme]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(NextSeo, {\n      title: setting.settings.meta_title,\n      description: setting.settings.meta_description,\n      canonical: setting.url,\n      openGraph: {\n        url: 'https://www.nextcode.id/',\n        title: `${setting.settings.og_title}`,\n        description: `${setting.settings.og_description}`,\n        images: [{\n          url: `${setting.settings.og_image}`,\n          width: 800,\n          height: 600,\n          alt: `${setting.settings.og_title}`\n        }],\n        site_name: `${setting.settings.og_title}`\n      },\n      twitter: {\n        handle: '@tegar',\n        site: '@nextcode',\n        cardType: 'summary_large_image'\n      }\n    }), /*#__PURE__*/_jsx(Hero, {\n      mode: mode\n    }), /*#__PURE__*/_jsx(ScrollAnimation, {\n      animateIn: \"fadeIn\",\n      children: /*#__PURE__*/_jsx(Artikel, {\n        posts: posts\n      })\n    })]\n  });\n}\nexport async function getStaticProps(context) {\n  const res = await fetch(`http://blog-backend.tegar.me/ghost/api/v3/content/posts/?key=adf6d2df02536197acba4f4ef2&limit=4&include=tags`);\n  const res_setting = await fetch(`http://blog-backend.tegar.me/ghost/api/v3/content/settings/?key=adf6d2df02536197acba4f4ef2`);\n  const posts = await res.json();\n  const setting = await res_setting.json();\n\n  if (!posts) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      posts,\n      setting\n    } // will be passed to the page component as props\n\n  };\n}","map":null,"metadata":{},"sourceType":"module"}