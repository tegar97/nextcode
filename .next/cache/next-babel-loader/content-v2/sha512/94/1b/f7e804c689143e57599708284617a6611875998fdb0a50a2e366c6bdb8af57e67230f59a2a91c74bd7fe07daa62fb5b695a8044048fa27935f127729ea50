{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\belajar\\\\nextcode\\\\pages\\\\post\\\\[slug].tsx\";\nimport React, { useEffect } from 'react';\nimport styles from './../../styles/components/post/post.module.scss';\nimport { useTheme } from 'next-themes';\nimport Prism from \"prismjs\";\nimport ScrollAnimation from 'react-animate-on-scroll';\n\nfunction Post({\n  post\n}) {\n  const {\n    theme,\n    setTheme\n  } = useTheme();\n  useEffect(() => {\n    Prism.highlightAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.post,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postImage,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/artikel.jpg\",\n        alt: \"image\",\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'cover'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl dark:color-grey-600 \",\n          children: post.posts[0].title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center mt-4\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"By Tania Rascia on November 30, 2020\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ScrollAnimation, {\n        animateIn: \"fadeIn\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: post.posts[0].html\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), \";\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const res = await fetch('http://blog-backend.tegar.me/ghost/api/v3/content/posts/?key=adf6d2df02536197acba4f4ef2');\n  const posts = await res.json(); // Get the paths we want to pre-render based on posts\n\n  const paths = posts.posts.map(post => ({\n    params: {\n      slug: post.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const res = await fetch(`http://blog-backend.tegar.me/ghost/api/v3/content/posts/slug/${params.slug}/?key=adf6d2df02536197acba4f4ef2`);\n  const post = await res.json();\n  return {\n    props: {\n      post\n    },\n    revalidate: 10\n  };\n}\nexport default Post;","map":{"version":3,"sources":["C:/Users/asus/Documents/belajar/nextcode/pages/post/[slug].tsx"],"names":["React","useEffect","styles","useTheme","Prism","ScrollAnimation","Post","post","theme","setTheme","highlightAll","postImage","width","height","objectFit","postContent","posts","title","__html","html","getStaticPaths","res","fetch","json","paths","map","params","slug","fallback","getStaticProps","props","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,iDAAnB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,eAAP,MAA4B,yBAA5B;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAsB;AAClB,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAmBN,QAAQ,EAAjC;AACAF,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACM,YAAN;AACD,GAFM,EAEJ,EAFI,CAAT;AAGA,sBACI;AAAK,IAAA,SAAS,EAAER,MAAM,CAACK,IAAvB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEL,MAAM,CAACS,SAAvB;AAAA,6BACI;AAAK,QAAA,GAAG,EAAC,cAAT;AAAwB,QAAA,GAAG,EAAC,OAA5B;AAAoC,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAE,MAAR;AAAeC,UAAAA,MAAM,EAAE,MAAvB;AAA8BC,UAAAA,SAAS,EAAE;AAAzC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACa,WAAvB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,+BAAd;AAAA,oBAA+CR,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcC;AAA7D;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,QAA3B;AAAA,gCACI;AAAK,UAAA,uBAAuB,EAAE;AAACC,YAAAA,MAAM,EAACX,IAAI,CAACS,KAAL,CAAW,CAAX,EAAcG;AAAtB;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH;;AAED,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,yFAAD,CAAvB;AACA,QAAMN,KAAK,GAAG,MAAMK,GAAG,CAACE,IAAJ,EAApB,CAFkC,CAGlC;;AACA,QAAMC,KAAK,GAAGR,KAAK,CAACA,KAAN,CAAYS,GAAZ,CAAiBlB,IAAD,KAAW;AACrCmB,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAEpB,IAAI,CAACoB;AAAb;AAD6B,GAAX,CAAhB,CAAd;AAIF,SAAO;AAAEH,IAAAA,KAAF;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AAED;AAED,OAAO,eAAeC,cAAf,CAA8B;AAACH,EAAAA;AAAD,CAA9B,EAAwC;AAC3C,QAAML,GAAG,GAAG,MAAMC,KAAK,CAAE,gEAA+DI,MAAM,CAACC,IAAK,kCAA7E,CAAvB;AAEA,QAAMpB,IAAI,GAAG,MAAMc,GAAG,CAACE,IAAJ,EAAnB;AAIA,SAAO;AACHO,IAAAA,KAAK,EAAC;AACFvB,MAAAA;AADE,KADH;AAIHwB,IAAAA,UAAU,EAAE;AAJT,GAAP;AAOH;AACD,eAAezB,IAAf","sourcesContent":["import React,{useEffect} from 'react'\r\nimport styles from './../../styles/components/post/post.module.scss'\r\nimport Link from 'next/link'\r\nimport { useTheme } from 'next-themes'\r\nimport Prism from \"prismjs\";\r\nimport ScrollAnimation from 'react-animate-on-scroll';\r\n\r\nfunction Post({post}) {\r\n    const {theme,setTheme} = useTheme()\r\n    useEffect(() => {\r\n        Prism.highlightAll();\r\n      }, []);\r\n    return (\r\n        <div className={styles.post}>\r\n            <div className={styles.postImage} >\r\n                <img src=\"/artikel.jpg\" alt=\"image\" style={{width: '100%',height: '100%',objectFit: 'cover'}} />\r\n            </div>\r\n            <div className={styles.postContent}>\r\n                <div className=\"text-center\">\r\n                  <h1 className=\"text-4xl dark:color-grey-600 \">{post.posts[0].title}</h1>\r\n                  <div className=\"flex justify-center mt-4\">\r\n                    <span>By Tania Rascia on November 30, 2020</span>\r\n                   \r\n\r\n                  </div>\r\n                </div>\r\n                <ScrollAnimation animateIn=\"fadeIn\">\r\n                    <div dangerouslySetInnerHTML={{__html:post.posts[0].html }} />;\r\n\r\n                </ScrollAnimation>\r\n\r\n              \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n    const res = await fetch('http://blog-backend.tegar.me/ghost/api/v3/content/posts/?key=adf6d2df02536197acba4f4ef2')\r\n    const posts = await res.json()\r\n    // Get the paths we want to pre-render based on posts\r\n    const paths = posts.posts.map((post) => ({\r\n        params: { slug: post.slug },\r\n    }))\r\n\r\n  return { paths, fallback: false }\r\n\r\n}\r\n\r\nexport async function getStaticProps({params}) {\r\n    const res = await fetch(`http://blog-backend.tegar.me/ghost/api/v3/content/posts/slug/${params.slug}/?key=adf6d2df02536197acba4f4ef2`)\r\n\r\n    const post = await res.json()\r\n\r\n  \r\n\r\n    return {\r\n        props:{\r\n            post\r\n        },\r\n        revalidate: 10,\r\n\r\n    }\r\n}\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}