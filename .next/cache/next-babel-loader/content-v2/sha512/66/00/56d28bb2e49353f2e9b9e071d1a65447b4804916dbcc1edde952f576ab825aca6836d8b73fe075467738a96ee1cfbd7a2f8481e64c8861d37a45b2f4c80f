{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\belajar\\\\nextcode\\\\pages\\\\kategori\\\\[slug].tsx\";\nimport React from 'react';\nimport styles from './../../styles/components/kategori-page/category-page.module.scss';\nimport { useTheme } from 'next-themes';\n\nfunction Category({\n  posts\n}) {\n  const {\n    theme,\n    setTheme\n  } = useTheme();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: styles.categoryPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: theme === 'light' ? styles.categoryPage__hero : styles.categoryPage__heroDark,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold text-center text-white\",\n          children: \"KATEGORI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mt-3 text-lg font-medium text-center text-white\",\n          children: \"Baca materi berdasarkan kategori yang kamu butuhkan\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-5 mt-10\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl text-center\",\n        children: \"Kategori\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-10 mt-10 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const res = await fetch('http://blog-backend.tegar.me/ghost/api/v3/content/tags/?key=adf6d2df02536197acba4f4ef2');\n  const tags = await res.json(); // Get the paths we want to pre-render based on posts\n\n  const paths = tags.tags.map(tag => ({\n    params: {\n      slug: tag.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const res = await fetch(`http://blog-backend.tegar.me/ghost/api/v3/content/posts/?key=adf6d2df02536197acba4f4ef2&limit=6&include=tags&${params.slug ? `filter=tag:${params.slug}` : ''}`);\n  const posts = await res.json();\n\n  if (!posts) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      posts\n    },\n    // will be passed to the page component as props\n    revalidate: 10\n  };\n}\nexport default Category;","map":{"version":3,"sources":["C:/Users/asus/Documents/belajar/nextcode/pages/kategori/[slug].tsx"],"names":["React","styles","useTheme","Category","posts","theme","setTheme","categoryPage","categoryPage__hero","categoryPage__heroDark","getStaticPaths","res","fetch","tags","json","paths","map","tag","params","slug","fallback","getStaticProps","notFound","props","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,mEAAnB;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAMA,SAASC,QAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA2B;AAEvB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAsBJ,QAAQ,EAApC;AACA,sBACI;AAAS,IAAA,SAAS,EAAED,MAAM,CAACM,YAA3B;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEF,KAAK,KAAK,OAAV,GAAoBJ,MAAM,CAACO,kBAA3B,GAAgDP,MAAM,CAACQ,sBAAvE;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,2CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,iDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;AAED,OAAO,eAAeC,cAAf,GAA+B;AAClC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,wFAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CAFkC,CAGlC;;AACA,QAAMC,KAAK,GAAGF,IAAI,CAACA,IAAL,CAAUG,GAAV,CAAeC,GAAD,KAAU;AAClCC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAEF,GAAG,CAACE;AAAZ;AAD0B,GAAV,CAAd,CAAd;AAIF,SAAO;AAAEJ,IAAAA,KAAF;AAASK,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACD;AACD,OAAO,eAAeC,cAAf,CAA8B;AAACH,EAAAA;AAAD,CAA9B,EAAwC;AAC7C,QAAMP,GAAG,GAAG,MAAMC,KAAK,CAAG,gHAA+GM,MAAM,CAACC,IAAP,GAAe,cAAaD,MAAM,CAACC,IAAK,EAAxC,GAA4C,EAAG,EAAjK,CAAvB;AACA,QAAMf,KAAK,GAAG,MAAMO,GAAG,CAACG,IAAJ,EAApB;;AAEA,MAAI,CAACV,KAAL,EAAY;AACV,WAAO;AACLkB,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AAED,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLnB,MAAAA;AADK,KADF;AAGF;AACHoB,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,eAAerB,QAAf","sourcesContent":["import React,{useState} from 'react'\r\nimport styles from './../../styles/components/kategori-page/category-page.module.scss'\r\nimport { useTheme } from 'next-themes';\r\nimport Link from 'next/link';\r\nimport Image from 'next/image'\r\n\r\n\r\n\r\nfunction Category({posts}) {\r\n    \r\n    const { theme, setTheme } = useTheme();\r\n    return (\r\n        <section className={styles.categoryPage}>\r\n            <div className={theme === 'light' ? styles.categoryPage__hero : styles.categoryPage__heroDark}  >\r\n                <div className=\"text-center \">\r\n                    <h1 className=\"text-4xl font-bold text-center text-white\">KATEGORI</h1>\r\n                    <h2 className=\"mt-3 text-lg font-medium text-center text-white\">Baca materi berdasarkan kategori yang kamu butuhkan</h2>\r\n                </div>\r\n            </div>\r\n            <div className=\"p-5 mt-10\">\r\n                <h1 className=\"text-4xl text-center\">Kategori</h1>\r\n                <div className=\"grid grid-cols-2 gap-10 mt-10 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6 \">\r\n                    \r\n                </div>\r\n            </div>\r\n         \r\n        </section>\r\n    )\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n    const res = await fetch('http://blog-backend.tegar.me/ghost/api/v3/content/tags/?key=adf6d2df02536197acba4f4ef2')\r\n    const tags = await res.json()\r\n    // Get the paths we want to pre-render based on posts\r\n    const paths = tags.tags.map((tag) => ({\r\n        params: { slug: tag.slug },\r\n    }))\r\n\r\n  return { paths, fallback: false }\r\n}\r\nexport async function getStaticProps({params}) {\r\n  const res = await fetch( `http://blog-backend.tegar.me/ghost/api/v3/content/posts/?key=adf6d2df02536197acba4f4ef2&limit=6&include=tags&${params.slug ? `filter=tag:${params.slug}` : ''}`)\r\n  const posts = await res.json()\r\n\r\n  if (!posts) {\r\n    return {\r\n      notFound: true,\r\n    }\r\n  }\r\n\r\n  return {\r\n    props: {\r\n      posts\r\n    }, // will be passed to the page component as props\r\n    revalidate: 10\r\n  }\r\n}\r\n\r\nexport default Category\r\n"]},"metadata":{},"sourceType":"module"}