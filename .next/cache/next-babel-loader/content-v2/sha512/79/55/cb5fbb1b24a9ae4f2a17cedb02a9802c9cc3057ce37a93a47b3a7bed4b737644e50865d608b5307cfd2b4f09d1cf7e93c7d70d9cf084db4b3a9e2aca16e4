{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect } from 'react';\nimport styles from './../../styles/components/post/post.module.scss';\nimport { useTheme } from 'next-themes';\nimport Prism from \"prismjs\";\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport { NextSeo } from 'next-seo';\n\nfunction Post({\n  post\n}) {\n  const {\n    theme,\n    setTheme\n  } = useTheme();\n  useEffect(() => {\n    Prism.highlightAll();\n  }, []);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(NextSeo, {\n      title: post.posts[0].meta_title,\n      description: post.posts[0].meta_description,\n      canonical: post.posts[0].url,\n      openGraph: {\n        url: 'https://www.nextcode.id/',\n        title: `${post.posts[0].og_title}`,\n        description: `${post.posts[0].og_description}`,\n        images: [{\n          url: `${post.posts[0].url}`,\n          width: 800,\n          height: 600,\n          alt: `${post.posts[0].og_title}`\n        }],\n        site_name: `nextcode indonesia`\n      },\n      twitter: {\n        handle: '@tegar',\n        site: '@nextcode',\n        cardType: 'summary_large_image'\n      }\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: styles.post,\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: styles.postImage,\n        children: /*#__PURE__*/_jsx(\"img\", {\n          src: \"/artikel.jpg\",\n          alt: \"image\",\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover'\n          }\n        })\n      }), /*#__PURE__*/_jsx(ScrollAnimation, {\n        animateIn: \"fadeIn\",\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: styles.postContent,\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsx(\"h1\", {\n              className: \"text-4xl dark:color-grey-600 \",\n              children: post.posts[0].title\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"flex justify-center mt-4\",\n              children: /*#__PURE__*/_jsx(\"span\", {\n                children: \"By Tegar Akmal on November 30, 2020\"\n              })\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            dangerouslySetInnerHTML: {\n              __html: post.posts[0].html\n            }\n          }), \";\"]\n        })\n      })]\n    })]\n  });\n}\n\nexport async function getStaticPaths() {\n  const res = await fetch('http://blog-backend.tegar.me/ghost/api/v3/content/posts/?key=adf6d2df02536197acba4f4ef2');\n  const posts = await res.json(); // Get the paths we want to pre-render based on posts\n\n  const paths = posts.posts.map(post => ({\n    params: {\n      slug: post.slug\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const res = await fetch(`http://blog-backend.tegar.me/ghost/api/v3/content/posts/slug/${params.slug}/?key=adf6d2df02536197acba4f4ef2`);\n  const post = await res.json();\n  return {\n    props: {\n      post\n    },\n    revalidate: 10\n  };\n}\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}