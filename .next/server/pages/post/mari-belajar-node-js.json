{"pageProps":{"post":{"posts":[{"slug":"mari-belajar-node-js","id":"602c2197b58c9f097ed4b2e0","uuid":"5f72af2f-fc05-4951-aaa5-2fb9ac55763d","title":"Mari Belajar Nopde","html":"<h3 id=\"apa-itu-node-js\"><strong><strong><strong>Apa Itu Node JS?</strong></strong></strong></h3><p>Node.js adalah runtime Javascript yang dibangun di mesin <a href=\"https://developers.google.com/v8/\">Javascript V8 Chrome </a>untuk memudahkan pembuatan aplikasi jaringan cepat dan skalabel.</p><figure class=\"kg-card kg-image-card kg-width-full\"><img src=\"https://blog-backend.tegar.me/content/images/2021/02/Node-Js.png\" class=\"kg-image\" alt srcset=\"https://blog-backend.tegar.me/content/images/size/w600/2021/02/Node-Js.png 600w, https://blog-backend.tegar.me/content/images/size/w1000/2021/02/Node-Js.png 1000w, https://blog-backend.tegar.me/content/images/2021/02/Node-Js.png 1343w\"></figure><p>Node js bukanlah bahasa pemrograman, melainkan runtime environment untuk mengeksekusi kode javascript di sisi server (<em>server-side</em>).</p><p>Sehingga memungkinkan kita untuk mengembangkan aplikasi web menggunakan bahasa pemrograman javascript di sisi server (<em>server-side</em>).</p><p><br>Layaknya PHP, Phyton, Ruby dan lainnya.</p><p><br>Tidak hanya itu, node.js juga include dengan berbagai modul library javascript yang dapat digunakan secara instan.</p><p></p><h3 id=\"kenapa-menggunakan-node-js\"><strong><strong><strong>Kenapa Menggunakan Node.JS?</strong></strong></strong></h3><p>Node.js menggunakan model I / O non-blocking yang bersifat event-driven yang membuatnya ringan dan efisien, sempurna untuk aplikasi real-time data-intensif yang berjalan di perangkat terdistribusi.</p><p>Itulah alasannya kenapa menggunakan node js.</p><p>Untuk lebih jelasnya, berikut penjabarannya:</p><p><strong><strong>#1. Asynchronous and Event Driven</strong></strong></p><p>Semua pustaka Node.js API adalah asynchronous, artinya, non-blocking. Ini pada dasarnya berarti server berbasis Node.js tidak pernah menunggu API untuk mengembalikan data.</p><p>Server pindah ke API berikutnya setelah memanggilnya dan mekanisme pemberitahuan event Node.js membantu server untuk mendapatkan respons dari panggilan API sebelumnya.</p><p><strong><strong>#2. Sangat Cepat</strong></strong></p><p>Dibangun di Google Chrome V8 JavaScript Engine, pustaka Node.js sangat cepat dalam eksekusi kode.</p><p><strong><strong>#3. Single Threaded tetapi Highly Scalable</strong></strong></p><p>Node.js menggunakan model bergulir tunggal dengan perulangan peristiwa.</p><p>Mekanisme event membantu server untuk merespons dengan cara non-blocking dan menjadikan server sangat skalabel dibandingkan dengan server tradisional yang membuat untaian terbatas untuk menangani permintaan.</p><p>Node.js menggunakan program bergulir tunggal dan program yang sama dapat memberikan layanan ke jumlah permintaan yang jauh lebih besar daripada server tradisional seperti Apache HTTP Server.</p><p><strong><strong>#4. Tidak Ada Buffer</strong></strong></p><p>Aplikasi Node.js tidak pernah menyangga data apa pun. Aplikasi ini hanya menghasilkan data dalam potongan.</p><p><strong><strong>#5. Lisensi</strong></strong></p><p>Node.js dirilis di bawah <a href=\"https://raw.githubusercontent.com/joyent/node/v0.12.0/LICENSE\">lisensi MIT</a>.</p><p></p><p></p><h3 id=\"basic-webserver-node-js\"><strong><strong><strong>Basic Webserver Node.js</strong></strong></strong></h3><p><br>Untuk membuat server pada node.js, dapat menggunakan module http.</p><p>Kenapa kita perlu membuat server?</p><p>Bagaimana cara kerjanya?</p><p>Mari kita mulai.</p><p>#1. Pertama, buat sebuah file javascript dengan nama <strong><strong>app.js</strong></strong>.</p><p>Kemudian buka dengan text editor.</p><p>Disini saya menggunakan <a href=\"https://atom.io/\">ATOM</a> sebagai text editor.</p><p></p><p>Seperti gambar berikut</p><figure class=\"kg-card kg-image-card\"><img src=\"https://blog-backend.tegar.me/content/images/2021/02/app-js.png\" class=\"kg-image\" alt srcset=\"https://blog-backend.tegar.me/content/images/size/w600/2021/02/app-js.png 600w, https://blog-backend.tegar.me/content/images/2021/02/app-js.png 612w\"></figure><p></p><p>#2. Kemudian ketikan kode berikut:</p><pre><code class=\"language-javascript\">const http = require('http');\n \nhttp.createServer(function(req,res){\n  res.writeHead(200,{\n    \"Content-Type\" : \"text/html\"\n  });\n  res.end(\"Hello World\");\n}).listen(8000);\n \nconsole.log('Server is running at port 8000');</code></pre><p>#3. Jalankan <strong><strong>app.js</strong></strong> dengan mengetikan perintah berikut pada terminal:</p><blockquote>node app.js</blockquote><h3 id=\"serving-static-files\"><strong><strong><strong>Serving Static Files</strong></strong></strong></h3><p>Express menyediakan middleware <strong><strong><a href=\"http://expressjs.com/en/starter/static-files.html\">express.static</a></strong></strong> untuk melayani file statis, seperti gambar, CSS, JavaScript, dan lain-lain.</p><p>Anda hanya perlu meneruskan nama direktori tempat Anda menyimpan file statis Anda ke middleware <strong><strong>express.static</strong></strong> untuk melayani file secara langsung.</p><p>Sebagai contoh, saya ingin melayani file <a href=\"https://getbootstrap.com/\">bootstrap.</a></p><p>Bootstrap terdiri dari file CSS dan Javascript.</p><p>Disini, Saya telah mendownload bootstrap pada situs resminya <strong><strong><a href=\"https://getbootstrap.com/\">getbootstrap.com</a></strong></strong>.</p><p>Jika Anda belum memiliki bootstrap, silahkan download terlebih dahulu.</p><p>Kemudian, saya membuat sebuah directory yang saya beri nama “<strong><strong>public</strong></strong>”.</p><p>Didalam folder <strong><strong>public</strong></strong>, saya copy-kan file bootstrap yang telah di download sebelumnya.</p><p>source : <a href=\"https://mfikri.com/artikel/tutorial-nodejs\">Tutorial Node js untuk pemula [Full Tutorial] (mfikri.com)</a></p><p></p>","comment_id":"602c2197b58c9f097ed4b2e0","feature_image":"https://blog-backend.tegar.me/content/images/2021/02/f3a74e737acdc51ac87a3c6ea5c3abaf.png","featured":false,"visibility":"public","email_recipient_filter":"none","created_at":"2021-02-16T19:48:39.000+00:00","updated_at":"2021-02-16T19:53:07.000+00:00","published_at":"2021-02-16T19:53:07.000+00:00","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"https://blog-backend.tegar.me/mari-belajar-node-js/","excerpt":"Apa Itu Node JS?\nNode.js adalah runtime Javascript yang dibangun di mesin Javascript V8 Chrome\n[https://developers.google.com/v8/]untuk memudahkan pembuatan aplikasi jaringan\ncepat dan skalabel.\n\nNode js bukanlah bahasa pemrograman, melainkan runtime environment untuk\nmengeksekusi kode javascript di sisi server (server-side).\n\nSehingga memungkinkan kita untuk mengembangkan aplikasi web menggunakan bahasa\npemrograman javascript di sisi server (server-side).\n\n\nLayaknya PHP, Phyton, Ruby dan lainny","reading_time":2,"access":true,"send_email_when_published":false,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null}]}},"__N_SSG":true}